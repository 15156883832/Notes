继承：不管怎么样，刚创建的类都会继承于其他类，除非特殊指定继承于某个类，某则默认都是继承Object类，继承另一方面可以看成是对类的复用
一般而言，为了继承，将所有的数据成员都指定为private,所有的方法指定为public,特殊情况做特殊调整，A继承B,B中的方法先初始化，即使A中没有给B编写构造器，但是会给默认的构造器

组合：对象A中有多个String对象几个基本数据类型，以及另一个类的对象B,对于这个对象B必须将其至于新的类中
组合范例：public class B(){ private Integer h;}  
	  public class A(){ private String a;private String b;
			    private B objB ; }

代理：
	1）静态代理：代理类实现了类A,托管类也实现了类A；其中，静态代理类是有特殊的工具生成的，在程序运行前，代理类的.class文件就已经生成了。
	2）动态代理（JDK代理，接口代理）类：代理对象不需要实现接口，代理对象的生成是利用JDK的API,动态的在内存中构建代理对象，代理类所在的包:java.lang.reflect.Proxy,方法 newProxyInstance（Param-A,Param-B,Param-C）,其中
Param-A:指定当前目标对象使用类加载器,获取加载器的方法是固定的
Param-B:目标对象实现的接口的类型,使用泛型方式确认类型
Param-C:事件处理,执行目标对象的方法时,会触发事件处理器的方法,会把当前执行目标对象的方法作为参数传入